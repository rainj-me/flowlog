plugins {
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    compileOnly 'org.projectlombok:lombok:1.18.24'

    implementation 'org.scala-lang:scala-library:2.12.15'
	implementation 'org.apache.spark:spark-streaming-kafka-0-10-assembly_2.12:3.3.0'
	implementation 'org.apache.spark:spark-streaming_2.12:3.3.0'
	implementation 'org.apache.spark:spark-core_2.12:3.3.0'
    implementation 'com.datastax.spark:spark-cassandra-connector_2.12:3.2.0'
    implementation 'com.google.guava:guava:31.0.1-jre'

    implementation project(':domain')

    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task submit_task(type: Exec, dependsOn: 'build') {
    workingDir '.'
    commandLine '../servers/spark/bin/spark-submit', '--class', 'me.rainj.flowlog.jobs.StreamFromKafkaJob', '--packages', 'org.apache.spark:spark-streaming-kafka-0-10-assembly_2.12:3.3.0,com.datastax.spark:spark-cassandra-connector_2.12:3.2.0', '--jars', '../domain/build/libs/domain.jar', 'build/libs/jobs.jar'
    ignoreExitValue true
    standardOutput = new ByteArrayOutputStream()
    doLast {
        println standardOutput.toString()
    }
}
